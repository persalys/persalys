[13.0208]
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import persalys

myStudy = persalys.Study('myStudy')
persalys.Study.Add(myStudy)
dist_E = ot.Beta(0.93, 3.2, 2.8e+07, 4.8e+07)
E = persalys.Input('E', 30000000, dist_E, 'Young\'s modulus (Pa)')
dist_F = ot.LogNormal(9.46206, 0.554513, 15000)
F = persalys.Input('F', 30000, dist_F, 'Force applied (N)')
dist_L = ot.Uniform(250, 260)
L = persalys.Input('L', 250, dist_L, 'Length (m4)')
dist_I = ot.Beta(2.5, 4, 310, 450)
I = persalys.Input('I', 400, dist_I, 'Section modulus (m4)')
y = persalys.Output('y', 'Vertical deviation (m)')
inputs = [E, F, L, I]
outputs = [y]
formulas = ['F*L^3/(3*E*I)']
myPhysicalModel = persalys.SymbolicPhysicalModel('myPhysicalModel', inputs, outputs, formulas)
R = ot.CorrelationMatrix(2)
R[0, 1] = -0.2
copula = ot.NormalCopula(ot.NormalCopula.GetCorrelationFromSpearmanCorrelation(R))
myPhysicalModel.setCopula(['L', 'I'], copula)
myStudy.add(myPhysicalModel)
limitState1 = persalys.LimitState('limitState1', myPhysicalModel, 'y', ot.Greater(), 30)
myStudy.add(limitState1)
mySobol = persalys.SobolAnalysis('mySobol', myPhysicalModel)
mySobol.setMaximumCalls(1000)
mySobol.setMaximumConfidenceIntervalLength(-1)
mySobol.setMaximumElapsedTime(60)
mySobol.setBlockSize(1)
mySobol.setReplicationSize(166)
mySobol.setSeed(0)
mySobol.setConfidenceLevel(0.95)
myStudy.add(mySobol)
mySRC = persalys.SRCAnalysis('mySRC', myPhysicalModel, 1000)
mySRC.setBlockSize(1)
mySRC.setSeed(0)
myStudy.add(mySRC)
values = [[2.8e+07, 4.8e+07],
[15000, 47021.3],
[250, 260],
[310, 450]]
aDesign = persalys.GridDesignOfExperiment('aDesign', myPhysicalModel, values)
aDesign.setBlockSize(1)
interestVariables = ['y']
aDesign.setInterestVariables(interestVariables)
myStudy.add(aDesign)
myTaylorExpansionMoments = persalys.TaylorExpansionMomentsAnalysis('myTaylorExpansionMoments', myPhysicalModel)
myStudy.add(myTaylorExpansionMoments)
myMonteCarlo = persalys.MonteCarloAnalysis('myMonteCarlo', myPhysicalModel)
myMonteCarlo.setMaximumCalls(1000)
myMonteCarlo.setMaximumCoefficientOfVariation(0.01)
myMonteCarlo.setMaximumElapsedTime(60)
myMonteCarlo.setBlockSize(1)
myMonteCarlo.setSeed(0)
myStudy.add(myMonteCarlo)
myMonteCarloSimu = persalys.MonteCarloReliabilityAnalysis('myMonteCarloSimu', limitState1)
myMonteCarloSimu.setMaximumCalls(10000)
myMonteCarloSimu.setMaximumCoefficientOfVariation(0.1)
myMonteCarloSimu.setMaximumElapsedTime(60)
myMonteCarloSimu.setBlockSize(10)
myMonteCarloSimu.setSeed(0)
myStudy.add(myMonteCarloSimu)


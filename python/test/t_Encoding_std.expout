class=DataModel name=myDataModel fileName=données.csv inputColumns=[0,2] outputColumns=[] inputNames=[X0,X2] outputNames=[]
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import persalys

myStudy = persalys.Study('myStudy')
persalys.Study.Add(myStudy)
A = persalys.Input('A', 0, '')
B = persalys.Input('B', 0, '')
S = persalys.Output('S', '')
inputs = [A, B]
outputs = [S]
formulas = ['A+B+2']
SM = persalys.SymbolicPhysicalModel('SM', inputs, outputs, formulas)
myStudy.add(SM)
inputColumns = [0, 2]
outputColumns = []
inputNames = ['X0', 'X2']
outputNames = []
myDataModel = persalys.DataModel('myDataModel', 'données.csv', inputColumns, outputColumns, inputNames, outputNames)
myStudy.add(myDataModel)
inputColumns = [0, 2]
doeI = persalys.ImportedDesignOfExperiment('doeI', SM, 'données.csv', inputColumns)
doeI.setBlockSize(1)
interestVariables = ['S']
doeI.setInterestVariables(interestVariables)
myStudy.add(doeI)

#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import persalys

myStudy = persalys.Study('myStudy')
persalys.Study.Add(myStudy)
A = persalys.Input('A', 0, '')
B = persalys.Input('B', 0, '')
S = persalys.Output('S', '')
inputs = [A, B]
outputs = [S]
formulas = ['A+B+2']
SM = persalys.SymbolicPhysicalModel('SM', inputs, outputs, formulas)
myStudy.add(SM)
inputColumns = [0, 2]
outputColumns = []
inputNames = ['X0', 'X2']
outputNames = []
myDataModel = persalys.DataModel('myDataModel', 'données.csv', inputColumns, outputColumns, inputNames, outputNames)
myStudy.add(myDataModel)
inputColumns = [0, 2]
doeI = persalys.ImportedDesignOfExperiment('doeI', SM, 'données.csv', inputColumns)
doeI.setBlockSize(1)
interestVariables = ['S']
doeI.setInterestVariables(interestVariables)
myStudy.add(doeI)


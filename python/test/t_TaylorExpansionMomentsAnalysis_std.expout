class=TaylorExpansionMomentsAnalysis name=aTaylor physicalModel=aModelPhys interestVariables=[Y0]
result= class=TaylorExpansionMomentsResult name=Unnamed outputNames=[Y0] meanFirstOrder=class=Point name=Unnamed dimension=1 values=[8.84147] meanSecondOrder=class=Point name=Unnamed dimension=1 values=[8.42074] standardDeviation=class=Point name=Unnamed dimension=1 values=[8.01822] variance=class=Point name=Unnamed dimension=1 values=[64.2919]


class=TaylorExpansionMomentsAnalysis name=aTaylor2 physicalModel=aModelPhys interestVariables=[Y1]
result= class=TaylorExpansionMomentsResult name=Unnamed outputNames=[Y1] meanFirstOrder=class=Point name=Unnamed dimension=1 values=[18.8415] meanSecondOrder=class=Point name=Unnamed dimension=1 values=[18.4207] standardDeviation=class=Point name=Unnamed dimension=1 values=[8.01822] variance=class=Point name=Unnamed dimension=1 values=[64.2919]


class=TaylorExpansionMomentsAnalysis name=aTaylor3 physicalModel=myPhysicalModel interestVariables=[Y0]
result= class=TaylorExpansionMomentsResult name=Unnamed outputNames=[Y0] meanFirstOrder=class=Point name=Unnamed dimension=1 values=[8.84147] meanSecondOrder=class=Point name=Unnamed dimension=1 values=[8.84147] standardDeviation=class=Point name=Unnamed dimension=1 values=[8.01822] variance=class=Point name=Unnamed dimension=1 values=[64.2919]


class=TaylorExpansionMomentsAnalysis name=aTaylor4 physicalModel=myPhysicalModel interestVariables=[Y0]
result= class=TaylorExpansionMomentsResult name=Unnamed outputNames=[Y0] meanFirstOrder=class=Point name=Unnamed dimension=1 values=[8.84147] meanSecondOrder=class=Point name=Unnamed dimension=1 values=[8.84147] standardDeviation=class=Point name=Unnamed dimension=1 values=[8.01808] variance=class=Point name=Unnamed dimension=1 values=[64.2897]
#!/usr/bin/env python

import openturns as ot
import persalys

myStudy = persalys.Study('myStudy')
persalys.Study.Add(myStudy)
dist_X0 = ot.Normal(1, 1)
X0 = persalys.Input('X0', 0, dist_X0, '')
dist_X1 = ot.Normal(1, 1)
X1 = persalys.Input('X1', 0, dist_X1, '')
X2 = persalys.Input('X2', 10, '')
fake_Y0 = persalys.Output('fake_Y0', '')
fake_Y0.setIsSelected(False)
Y0 = persalys.Output('Y0', '')
Y1 = persalys.Output('Y1', '')
inputs = [X0, X1, X2]
outputs = [fake_Y0, Y0, Y1]
formulas = ['X0', 'sin(X0) + 8*X1', 'sin(X0) + 8*X1 + X2']
aModelPhys = persalys.SymbolicPhysicalModel('aModelPhys', inputs, outputs, formulas)
myStudy.add(aModelPhys)
dist_X0 = ot.Normal(1, 1)
X0 = persalys.Input('X0', 0, dist_X0, '')
X0.setFiniteDifferenceStep(0.005)
dist_X1 = ot.Normal(1, 1)
X1 = persalys.Input('X1', 0, dist_X1, '')
X1.setFiniteDifferenceStep(0.005)
Y0 = persalys.Output('Y0', '')
fake_Y0 = persalys.Output('fake_Y0', '')
inputs = [X0, X1]
outputs = [Y0, fake_Y0]
code = r'''
from math import sin

def _exec(X0, X1):
    Y0 = sin(X0) + 8*X1
    fake_Y0 = X0
    return Y0, fake_Y0
'''
myPhysicalModel = persalys.PythonPhysicalModel('myPhysicalModel', inputs, outputs, code)
myStudy.add(myPhysicalModel)
aTaylor = persalys.TaylorExpansionMomentsAnalysis('aTaylor', aModelPhys)
interestVariables = ['Y0']
aTaylor.setInterestVariables(interestVariables)
myStudy.add(aTaylor)
aTaylor2 = persalys.TaylorExpansionMomentsAnalysis('aTaylor2', aModelPhys)
interestVariables = ['Y1']
aTaylor2.setInterestVariables(interestVariables)
myStudy.add(aTaylor2)
aTaylor3 = persalys.TaylorExpansionMomentsAnalysis('aTaylor3', myPhysicalModel)
interestVariables = ['Y0']
aTaylor3.setInterestVariables(interestVariables)
myStudy.add(aTaylor3)
aTaylor4 = persalys.TaylorExpansionMomentsAnalysis('aTaylor4', myPhysicalModel)
interestVariables = ['Y0']
aTaylor4.setInterestVariables(interestVariables)
myStudy.add(aTaylor4)


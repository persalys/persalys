class=MonteCarloReliabilityAnalysis name=myMonteCarlo limitState=class=LimitStateImplementation name=aLimitState physicalModel=aModelPhys outputName=Y0 operator=class=Greater name=Unnamed threshold=20 maximumCalls=1000 maximumCoefficientOfVariation=0.1 maximumElapsedTime=60 seed=2 blockSize=10
result= class=SimulationReliabilityResult name=Unnamed simulationResult=probabilityEstimate=7.500000e-02 varianceEstimate=7.616389e-05 standard deviation=8.73e-03 coefficient of variation=1.16e-01 confidenceLength(0.95)=3.42e-02 outerSampling=100 blockSize=10
class=MonteCarloReliabilityAnalysis name=myMonteCarlo2 limitState=class=LimitStateImplementation name=aLimitState physicalModel=aModelPhys outputName=Y0 operator=class=Greater name=Unnamed threshold=20 maximumCalls=inf maximumCoefficientOfVariation=0.02 maximumElapsedTime=100000 seed=0 blockSize=100
result= class=SimulationReliabilityResult name=Unnamed simulationResult=probabilityEstimate=7.524116e-02 varianceEstimate=2.259680e-06 standard deviation=1.50e-03 coefficient of variation=2.00e-02 confidenceLength(0.95)=5.89e-03 outerSampling=311 blockSize=100
class=MonteCarloReliabilityAnalysis name=myMonteCarlo3 limitState=class=LimitStateImplementation name=aLimitState physicalModel=aModelPhys outputName=Y0 operator=class=Greater name=Unnamed threshold=20 maximumCalls=1000 maximumCoefficientOfVariation=0.1 maximumElapsedTime=60 seed=0 blockSize=10
result= class=SimulationReliabilityResult name=Unnamed simulationResult=probabilityEstimate=1.337838e-01 varianceEstimate=1.722869e-04 standard deviation=1.31e-02 coefficient of variation=9.81e-02 confidenceLength(0.95)=5.15e-02 outerSampling=74 blockSize=10
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import openturns as ot
import persalys

myStudy = persalys.Study('myStudy')
persalys.Study.Add(myStudy)
dist_X0 = ot.Normal(1, 1)
X0 = persalys.Input('X0', 0, dist_X0, '')
dist_X1 = ot.Normal(1, 1)
X1 = persalys.Input('X1', 0, dist_X1, '')
X2 = persalys.Input('X2', 2, '')
Y0 = persalys.Output('Y0', '')
inputs = [X0, X1, X2]
outputs = [Y0]
formulas = ['sin(X0) + 8*X1 + X2']
aModelPhys = persalys.SymbolicPhysicalModel('aModelPhys', inputs, outputs, formulas)
myStudy.add(aModelPhys)
aLimitState = persalys.LimitState('aLimitState', aModelPhys, 'Y0', ot.Greater(), 20)
myStudy.add(aLimitState)
myMonteCarlo = persalys.MonteCarloReliabilityAnalysis('myMonteCarlo', aLimitState)
myMonteCarlo.setMaximumCalls(1000)
myMonteCarlo.setMaximumCoefficientOfVariation(0.1)
myMonteCarlo.setMaximumElapsedTime(60)
myMonteCarlo.setBlockSize(10)
myMonteCarlo.setSeed(2)
myStudy.add(myMonteCarlo)
myMonteCarlo2 = persalys.MonteCarloReliabilityAnalysis('myMonteCarlo2', aLimitState)
myMonteCarlo2.setMaximumCoefficientOfVariation(0.02)
myMonteCarlo2.setMaximumElapsedTime(100000)
myMonteCarlo2.setBlockSize(100)
myMonteCarlo2.setSeed(0)
myStudy.add(myMonteCarlo2)
myMonteCarlo3 = persalys.MonteCarloReliabilityAnalysis('myMonteCarlo3', aLimitState)
myMonteCarlo3.setMaximumCalls(1000)
myMonteCarlo3.setMaximumCoefficientOfVariation(0.1)
myMonteCarlo3.setMaximumElapsedTime(60)
myMonteCarlo3.setBlockSize(10)
myMonteCarlo3.setSeed(0)
myStudy.add(myMonteCarlo3)

